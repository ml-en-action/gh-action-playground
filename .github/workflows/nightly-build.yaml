name: nightly-build
on:
  push:
  workflow_dispatch:

jobs:
  nightly-build:
    name: nightly-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Test
        id: build
        continue-on-error: true
        run: |
          this is not

      - name: Status
        if: steps.build.status == 'success'
        run: |
          echo "Build succeeded"

      - name: Report status
        uses: actions/github-script@v5
        id: find-issue
        with:
          script: |
            const title = '⚠️ Nightly Build failed ⚠️'
            const creator = 'github-actions[bot]'
            const issueLabel = 'CI'
            const workflow_url = `https://github.com/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`
            const issue_body = `[Workflow Run URL](${workflow_url})`

            let foundIssue = false
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (let issue of issues.data) {
              if (
                issue.user.login === creator &&
                issue.state === 'open' &&
                issue.labels.some((label) => label.name === issueLabel)
              ) {
                github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  body: `${workflow_url}`,
                })
                core.info(`Updated an existing issue: ${issue.number}.`)
                foundIssue = true
                break
              }
            }

            if (!foundIssue) {
              const issue = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: issue_body,
                labels: [issueLabel],
              })
              core.info(`Opened a new issue: ${issue.number}`)
            }
