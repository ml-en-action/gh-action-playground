name: preview-pr
on:
  workflow_run:
    workflows:
      - build-pr
    types:
      - completed
      - requested

jobs:
  deploy:
    if: github.repository == 'ml-en-action/gh-action-playground'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: Set message value
        run: |
          echo "comment_message=This pull request is being automatically built with [GitHub Actions](https://github.com/features/actions) and [Netlify](https://www.netlify.com/). To see the status of your deployment, click below." >> $GITHUB_ENV

      - name: Find Pull Request
        uses: actions/github-script@v5
        id: find-pull-request
        with:
          script: |
            let pullRequestNumber = ''
            let pullRequestHeadSHA = ''

            core.info('Finding pull request...')
            core.info(`workflow_run payload: ${JSON.stringify(context.payload.workflow_run, null, 2)}`)
            const pullRequests = await github.rest.pulls.list({owner: context.repo.owner, repo: context.repo.repo})
            for (let pullRequest of pullRequests.data) {

              if(pullRequest.head.sha === context.payload.workflow_run.head_commit.id) {
                  pullRequestHeadSHA = pullRequest.head.sha
                  pullRequestNumber = pullRequest.number
                  break

              }
            }

            core.setOutput('number', pullRequestNumber)
            core.setOutput('sha', pullRequestHeadSHA)

            if(pullRequestNumber === '') {
              core.info(
                 `No pull request associated with git commit SHA: ${context.payload.workflow_run.head_commit.id}`
              )
            }
            else{
              core.info(`Found pull request ${pullRequestNumber}, with head sha: ${pullRequestHeadSHA}`)
            }

            core.info(`workflow payload: ${JSON.stringify(context.payload, null, 2)}`)

      - name: Get result
        run: |
          echo "${{ steps.find-pull-request.outputs.number }}"
          echo "${{ steps.find-pull-request.outputs.sha }}"

      - name: Find Comment
        uses: peter-evans/find-comment@v1
        if: steps.find-pull-request.outputs.number != ''
        id: fc
        with:
          issue-number: "${{ steps.find-pull-request.outputs.number }}"
          comment-author: "github-actions[bot]"
          body-includes: "${{ env.comment_message }}"

      - name: Create comment
        if: |
          github.event.workflow_run.conclusion != 'success'
          && steps.find-pull-request.outputs.number != ''
          && steps.fc.outputs.comment-id == ''
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ steps.find-pull-request.outputs.number }}
          body: |
            ${{ env.comment_message }}

            üöß Deployment in progress for git commit SHA: ${{ steps.find-pull-request.outputs.sha }}

      - name: Update comment
        if: |
          github.event.workflow_run.conclusion != 'success'
          && steps.find-pull-request.outputs.number != ''
          && steps.fc.outputs.comment-id != ''
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
          body: |
            ${{ env.comment_message }}

            üöß Deployment in progress for git commit SHA: ${{ steps.find-pull-request.outputs.sha }}

      - name: Update Jupyter Book Preview comment
        if: |
          github.event.workflow_run.conclusion == 'success'
          && steps.find-pull-request.outputs.number != ''
          && steps.fc.outputs.comment-id != ''
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
          body: |
            ${{ env.comment_message }}

            üîç Git commit SHA:  ${{ steps.find-pull-request.outputs.sha }}
            ‚úÖ Deployment Preview URL: https://github.com/
